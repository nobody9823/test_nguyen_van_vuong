name: CI/CD test
on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - "develop"
      - "staging"
      - "hotfix"
      - "main"
jobs:
  test:
    name: phpunit test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10
        env:
          MYSQL_ROOT_PASSWORD: valleyin
          MYSQL_DATABASE: jarvis
          TZ: Asia/Tokyo

    env:
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: jarvis
      DB_USERNAME: root
      DB_PASSWORD: valleyin

    steps:
      - uses: actions/checkout@v2
      - uses: php-actions/composer@v6
        with:
          version: 2.1.11
      - name: cache vendor
        id: cache
        uses: actions/cache@v1
        with:
          path: ./backend/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: composer install
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cd backend && composer install -n --prefer-dist
      - name: fix composer version
        run: cd backend && sudo composer self-update 2.0.14
      - name: copy .env
        run: cd backend && cp .env.example .env
      - name: generate key
        run: cd backend && php artisan key:generate
      - name: migrate
        run: cd backend && php artisan migrate
      - name: unit test
        run: cd backend && ./vendor/bin/phpunit

  # slack notification
  flaky-test-notification:
    needs:
      - test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: slack notification
        if: needs.test.result == 'failure'
        uses: tokorom/action-slack-incoming-webhook@v1.1.3
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_INCOMING_WEBHOOK }}
        with:
          text: "An error occurred in the automated test."
          attachments: |
            [
              {
                "color": "danger",
                "author_name": "${{ github.actor }}",
                "author_icon": "${{ github.event.sender.avatar_url }}",
                "fields": [
                  {
                    "title": "Pull Title",
                    "value": "${{ github.event.pull_request.title }}"
                  },
                  {
                    "title": "Pull URL",
                    "value": "${{ github.event.pull_request.html_url }}"
                  },
                  {
                    "title": "GitHub Actions URL",
                    "value": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                ]
              }
            ]
